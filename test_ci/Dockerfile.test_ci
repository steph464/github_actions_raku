# Utilisation d'une image Alpine légère comme image de base
#FROM python:3.8-alpine
#FROM python:3.9-alpine
#####FROM python:3.9  #####################   

################################################## ajout le 04/12/23 ################################################################
FROM alpine:3.16.8 
#FROM alpine:latest
####################################################################################################################################

# Répertoire de travail /app/tests
#WORKDIR /app/tests
#WORKDIR /tests
WORKDIR /test_ci

# Copie de tous les fichiers de test dans le répertoire /app/tests du conteneur
# rendre le fichier run_tests.sh executable 
#COPY ./requirements.txt /tests/
#COPY ./test_authen.py /tests/
#COPY ./test_autho.py /tests/
#COPY ./test_create_user.py /tests/
#COPY ./test_delete_user.py /tests/
#COPY ./test_predimage.py /tests/
#COPY ./test_predtexte.py /tests/
#COPY ./run_tests.sh /tests/ 
COPY . .

############ AJOUT ################
# Afficher le contenu du répertoire de travail du conteneur
#RUN ls -l
#########################################


################################################## ajout le 04/12/23 ###############################################################
#Install Python
#RUN apk add --update --no-cache python3 \
#    && ln -sf python3 /usr/bin/python3 \
#    && python3 -m ensurepip \
#    && pip3 install --no-cache-dir --upgrade pip setuptools


# Installing Python3 and pip. Using `python3` to ensure the correct version.
RUN apk add --update --no-cache python3 py3-pip \
    && ln -sf python3 /usr/bin/python \
    && pip3 install --no-cache-dir --upgrade pip setuptools

####################################################################################################################################

# Installation des dépendances (requests)
#RUN pip install requests

# installation des librairies à partir du fichier requirements.txt
#RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

################################# ajout le 05/12/23 ###################################################
RUN pip3 install --no-cache-dir -r requirements.txt
#######################################################################################################

# Rendre le script exécutable
# /!\ A MODIFIER    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#RUN chmod +x /tests/run_tests.sh
RUN chmod +x /test_ci/run_tests.sh

# Le cronjob est configuré pour s'exécuter quotidiennement à minuit (00:00)
#RUN echo "0 0 * * * /app/tests/run_tests1.sh > /app/tests/log.txt 2>&1 && cp /app/tests/log.txt /home/workspace_2/test_CI_CD" >> /var/spool/cron/crontabs/root
# permet de rediriger la sortie de la commande echo  vers le fichier  /var/spool/cron/crontabs/root
# et d'ajouter ainsi la tâche cron à la configuration de l'utilisateur root. 

# Exécuter cron en arrière-plan 
#CMD ["crond", "-f"] 

# Commande pour exécuter les tests
#CMD ["python", "test_authen.py"]
#CMD ["./run_tests.sh"]
#CMD ["/tests/run_tests.sh"]
#CMD ["/test_ci/run_tests.sh"] > logs.txt  # exécuter en dernier 
#CMD ["./run_tests.sh"] > logs.txt
#CMD ["./run_tests.sh"]  

################################################## ajout le 04/12/23 ###############################################################
#CMD ["/bin/bash/", "-c", "./run_tests.sh"]
#CMD ["/bin/bash", "-c", "./run_tests.sh"]
#CMD ["sh", "-c", "./run_tests.sh"]   OK pour tests pb avec chemin
#CMD ["sh", "-c", "./run_tests.sh"]
CMD ["sh", "-c", "run_tests.sh"]





#CMD [ "sh", "-c", "github_actions_raku/test_ci/run_tests.sh"]
#######################################################################################################################
#######################################################################################################################
#RUN ls /test_ci

#CMD ["./run_tests.sh"]
#######################################################################################################################
#######################################################################################################################

# Exécution cron en arrière-plan
#CMD crond -f -d 8 & /app/tests/run_tests1.sh > log.txt
# -d 8  active le niveau de débogage 8 pour crond qui affiche des informations de débogage supplémentaires


